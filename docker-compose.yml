version: '3'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./assets:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  redis:
    image: redis:latest

  server:
    build:
      dockerfile: Dockerfile
    command: python server.py
    environment:
      - BROKER_URL=redis://redis:6379/0
      - BACKEND_URL=redis://redis:6379/0
      - APP_NAME=worker
      - TASK_NAME=inference
      - CALLBACK_URL=http://server:5000/api/admin/task
    volumes:
      - ./:/app
    depends_on:
      - redis


  worker:
    image: ghcr.io/yushiang-demo/dula-net-worker:latest
    command: celery -A worker worker --loglevel=info
    environment:
      - BROKER_URL=redis://redis:6379/0
      - BACKEND_URL=redis://redis:6379/0
      - APP_NAME=worker
      - TASK_NAME=inference
    volumes:
      - ./assets:/app/assets
    depends_on:
      - redis

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_SITE_BASEURL: /mongoadmin
    depends_on:
      - mongo